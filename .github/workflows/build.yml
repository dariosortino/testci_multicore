name: Build Firmware
on:
  pull_request:
    branches: [ master ]

env:
  NCS_VERSION: v2.2.0
  ZEPHYR_SDK_VERSION: 0.15.2 

jobs:
  build:
    # if: "github.event_name != 'pull_request' || contains(toJSON(github.event.pull_request.body), '[enable firmware ci]') || contains(toJSON(github.event.pull_request.labels.*.name), '[enable firmware ci]')"
    runs-on: ubuntu-latest
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: mycode

    - name: Installing required tools
      run: |
        # See https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/getting_started/installing.html#install-the-required-tools
        wget https://apt.kitware.com/kitware-archive.sh
        sudo bash kitware-archive.sh
        # Install dependencies
        sudo apt install --no-install-recommends git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1
        

    - name: Install west
      run: |
        # See https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/getting_started/installing.html#install-west
        pip3 install --user west
        echo 'export PATH=~/.local/bin:"$PATH"' >> ~/.bashrc
        source ~/.bashrc
      
    - name: Get nRF Connect SDK code
      run: |
        # See https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/getting_started/installing.html#get-the-ncs-code
        mkdir ncs
        cd ncs
        west init -m https://github.com/nrfconnect/sdk-nrf --mr ${NCS_VERSION}
        # TODO: edit ncs/nrf/west.yml
        west update
        west zephyr-export

    - name: Install additional Python dependencies
      run: |
        # See https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/getting_started/installing.html#install-additional-python-dependencies
        cd ncs
        pip3 install --user -r zephyr/scripts/requirements.txt
        pip3 install --user -r nrf/scripts/requirements.txt
        pip3 install --user -r bootloader/mcuboot/scripts/requirements.txt
        
    - name: Install a toolchain
      run: |
        # See https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/getting_started/installing.html#install-a-toolchain
        cd ~
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZEPHYR_SDK_VERSION}/zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-x86_64.tar.gz
        wget -O - https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZEPHYR_SDK_VERSION}/sha256.sum | shasum --check --ignore-missing
        tar xvf zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-x86_64.tar.gz --directory $HOME/.local
        cd $HOME/.local/zephyr-sdk-${ZEPHYR_SDK_VERSION}
        ./setup.sh
        sudo cp ~/zephyr-sdk-${ZEPHYR_SDK_VERSION}/sysroots/x86_64-pokysdk-linux/usr/share/openocd/contrib/60-openocd.rules /etc/udev/rules.d
        sudo udevadm control --reload

    - name: Build multicore
      working-directory: mycode
      run: |
        # Setup command line build env
        cd ncs
        source zephyr/zephyr-env.sh
        west build --build-dir multicore\build multicore --pristine \
        --board nrf5340dk_nrf5340_cpuapp -- -DNCS_TOOLCHAIN_VERSION:STRING="NONE" \
        -DCONF_FILE:STRING="multicore/prj.conf"
